# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    env:
      LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
      LLM_API_BASE: ${{ secrets.LLM_API_BASE }}
      LLM_TEXT_MODEL: ${{ vars.LLM_TEXT_MODEL }}
      LLM_LOCATOR_MODEL: ${{ vars.LLM_LOCATOR_MODEL }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: false
        virtualenvs-path: ~/.virtualenvs
        installer-parallel: true
    - name: Install dependencies
      run: |
        poetry install
        poetry run rfbrowser init
        npx playwright install-deps
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Run tests
      run: |
        poetry run invoke tests
    - name: Store Artifact
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-results ${{ matrix.python-version }} # Choose a descriptive name for your artifact
        path: |
          results/*.html
          results/*.xml
          results/*.prof
          results/*.txt
    # - name: Test Report
    #   uses: dorny/test-reporter@main
    #   if: success() || failure()    # run this step even if previous step failed
    #   with:
    #     name: xUnit Tests ${{ matrix.python-version }}            # Name of the check run which will be created
    #     path: results/pytest.xml,results/xunit.xml    # Path to test results
    #     reporter: java-junit        # Format of test results
    - name: Report results
      if: success() || failure() 
      run: |
        poetry shell
        pip install pytablewriter
        python utilities/gha_reporter.py utilities/output.xml $GITHUB_STEP_SUMMARY